# This workflow will cut a new pre-release version every time a commit is pushed to main.
# Pre-release version increments work like this:
#   1.2.3 -> 1.2.4-alpha.0
#   1.2.4-alpha.0 -> 1.2.4-alpha.1
# The -alpha suffix ensures they aren't picked up as valid "released" versions in any dependency managers.

name: Release New Pre-Release Version

on:
  push:
    branches:
      - main

jobs:
  cut-prerelease:
    # This job creates a new commit to bump the library version.
    # There are two situations where we don't want it to run, both of which
    # are indicated by '[RELEASE]' being included in the commit message:
    #   * The commit was generated by this job to bump the library version.
    #   * The commit was generated by the tag publishing job to sync up our version with the newest tag.
    if: ${{ !contains(join(github.event.push.commits.*.message), '[RELEASE]') }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Poetry
      uses: snok/install-poetry@v1.1.1

    - name: Increment pre-release version
      run: poetry version prerelease

    - name: Fetch version after bump
      id: current-version
      run: echo "::set-output name=version::$(poetry version -s)"

    - name: Commit version increment
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "[RELEASE] [AUTOMATED] Increment pre-release version"
        commit_user_name: Release Cutter
        branch: main
        tagging_message: ${{ steps.current-version.outputs.version }}
